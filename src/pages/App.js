import Footer from '../sections/Footer';
import { Link, useNavigate } from 'react-router-dom';
import { useState } from 'react';
import Modal from '../Components/Modal';

import { useSelector } from 'react-redux';
const arrow = (
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 512">
    <path d="M2 334.5c-3.8 8.8-2 19 4.6 26l136 144c4.5 4.8 10.8 7.5 17.4 7.5s12.9-2.7 17.4-7.5l136-144c6.6-7 8.4-17.2 4.6-26s-12.5-14.5-22-14.5l-72 0 0-288c0-17.7-14.3-32-32-32L128 0C110.3 0 96 14.3 96 32l0 288-72 0c-9.6 0-18.2 5.7-22 14.5z" />
  </svg>
);
let logo = (
  <svg
    version="1.1"
    id="레이어_1"
    xmlns="http://www.w3.org/2000/svg"
    x="0px"
    y="0px"
    viewBox="0 0 197.63 108.69"
  >
    <g>
      <path
        d="M35.94,107.1h-8.79v-6.74l-3.71,2.44c-1.43-1.76-2.85-3.76-4.25-6.01c-1.4-2.25-2.65-4.74-3.76-7.47
		c-0.98,2.41-2.2,4.8-3.66,7.18c-1.46,2.38-3.04,4.48-4.74,6.3l-5.66-3.52c2.93-3.71,5.31-8.25,7.13-13.62
		c1.82-5.37,2.57-11.54,2.25-18.51H5.76v-6.84h20.21v6.84h-5.76c0,6.84,0.6,12.44,1.81,16.8c1.2,4.36,2.91,8.14,5.13,11.33V80.24
		h-5.66v-6.84h5.66V59.25h8.79V107.1z M46.39,107.1H37.6V59.25h8.79V107.1z"
      />
      <path
        d="M97.17,90.5H79.88v16.02h-9.77V90.5H53.03v-6.84h44.14V90.5z M94.73,66.86H81.45c1.5,2.28,3.56,4.17,6.2,5.66
		c2.64,1.5,5.65,2.6,9.03,3.32l-4.79,6.45c-3.39-0.52-6.51-1.46-9.38-2.83c-2.87-1.37-5.27-3.03-7.23-4.98
		c-2.08,1.89-4.64,3.5-7.67,4.83c-3.03,1.33-6.07,2.23-9.13,2.69l-4.79-6.54c3.32-0.52,6.35-1.46,9.08-2.83s4.82-3.29,6.25-5.76
		h-12.7v-6.84h38.38V66.86z"
      />
      <path
        d="M145.51,107.1h-9.77V93.04h-5.84v-5.37c-0.91,4.84-2.5,8.38-4.77,10.61c-2.27,2.24-5.1,3.35-8.47,3.35
		c-3.89,0-7.12-1.55-9.69-4.65c-2.56-3.1-3.85-8.27-3.85-15.52c0-7.3,1.36-12.6,4.09-15.9c2.73-3.3,6.04-4.95,9.93-4.95
		c3.83,0,6.7,1.25,8.62,3.76c1.92,2.51,3.29,5.91,4.14,10.21v-6.54h5.84v-8.79h9.77V107.1z M114.06,70.48
		c-0.78,2.02-1.17,5.57-1.17,10.64s0.39,8.63,1.17,10.64c0.78,2.02,1.63,3.03,2.54,3.03c0.91,0,1.77-1.01,2.59-3.03
		c0.81-2.02,1.22-5.57,1.22-10.64s-0.41-8.63-1.22-10.64c-0.81-2.02-1.68-3.03-2.59-3.03C115.69,67.45,114.84,68.46,114.06,70.48z
		 M130.18,80.49c0,1.92-0.07,3.83-0.2,5.71h5.76V74.87h-5.76C130.11,76.69,130.18,78.57,130.18,80.49z"
      />
      <path
        d="M168.55,62.08h5.37v6.84h-3.81c1.37,0.78,2.41,1.9,3.12,3.37c0.72,1.46,1.07,2.88,1.07,4.25c0,3-0.91,5.49-2.73,7.47
		c-1.82,1.99-4.33,2.98-7.52,2.98c-3,0-5.42-0.99-7.28-2.98c-1.86-1.99-2.78-4.48-2.78-7.47c0-1.37,0.37-2.78,1.12-4.25
		c0.75-1.46,1.74-2.59,2.98-3.37H154v-6.84h5.76v-2.54h8.79V62.08z M184.38,59.34v8.01h1.76v-8.01h8.79v29.88h-7.13
		c2.47,0.91,4.28,2.12,5.42,3.61c1.14,1.5,1.71,3,1.71,4.49c0,3.12-1.91,5.63-5.72,7.52c-3.81,1.89-8.29,2.83-13.42,2.83
		s-9.6-0.94-13.42-2.83c-3.81-1.89-5.72-4.39-5.72-7.52s1.89-5.63,5.66-7.52c3.77-1.89,8.2-2.83,13.28-2.83
		c1.63,0,3.55,0.2,5.76,0.59c2.21,0.39,3.81,0.75,4.79,1.07V74.19h-1.76v12.7h-8.79V59.34H184.38z M162.55,73.21
		c-0.42,0.65-0.63,1.63-0.63,2.93c0,1.3,0.21,2.28,0.63,2.93c0.42,0.65,0.96,0.98,1.61,0.98c0.65,0,1.19-0.33,1.61-0.98
		c0.42-0.65,0.63-1.63,0.63-2.93c0-1.3-0.21-2.28-0.63-2.93c-0.42-0.65-0.96-0.98-1.61-0.98C163.51,72.23,162.97,72.56,162.55,73.21
		z M169.4,94.11c-2,0.78-2.99,1.86-2.99,3.22s1,2.44,2.99,3.22c1.99,0.78,4.12,1.17,6.38,1.17c2.33,0,4.47-0.39,6.43-1.17
		c1.96-0.78,2.94-1.86,2.94-3.22s-0.98-2.44-2.94-3.22c-1.96-0.78-4.11-1.17-6.43-1.17C173.52,92.94,171.39,93.33,169.4,94.11z"
      />
    </g>
    <g>
      <path
        className="st0"
        d="M45.51,19.73h4.88v6.84h-4.88v25.29h-9.77v-4.59H10.25c-1.24,0-2.23-0.38-2.98-1.12
		c-0.75-0.75-1.12-1.74-1.12-2.98V5.38h13.87v6.84h-4.1v28.22H21V5.38h13.18v6.84h-3.42v28.22h4.98V3.81h9.77V19.73z"
      />
      <path
        className="st0"
        d="M97.95,32.13H54.1v-5.86h43.85V32.13z M95.41,17.48H66.8v1.46h28.61v5.86H61.13c-1.24,0-2.23-0.37-2.98-1.12
		c-0.75-0.75-1.12-1.74-1.12-2.98v-9.08h28.61v-1.27H57.03V4.5h38.38V17.48z M90.19,35.79c2.96,1.92,4.43,4.12,4.43,6.59
		c0,2.41-1.48,4.59-4.43,6.54s-7.58,2.93-13.88,2.93s-10.92-0.98-13.88-2.93s-4.43-4.13-4.43-6.54c0-2.47,1.46-4.67,4.38-6.59
		c2.92-1.92,7.57-2.88,13.93-2.88C82.61,32.91,87.24,33.88,90.19,35.79z M70.14,39.9c-1.58,0.75-2.36,1.58-2.36,2.49
		c0,0.91,0.79,1.74,2.36,2.49c1.57,0.75,3.63,1.12,6.18,1.12c2.55,0,4.61-0.37,6.18-1.12c1.58-0.75,2.36-1.58,2.36-2.49
		c0-0.91-0.79-1.74-2.36-2.49c-1.57-0.75-3.64-1.12-6.18-1.12C73.77,38.77,71.71,39.15,70.14,39.9z"
      />
    </g>
    <g>
      <path
        className="st1"
        d="M145.19,19.73h4.88v6.84h-4.88v25.29h-9.77v-4.59h-25.49c-1.24,0-2.23-0.38-2.98-1.12
		c-0.75-0.75-1.12-1.74-1.12-2.98V5.38h13.87v6.84h-4.1v28.22h5.08V5.38h13.18v6.84h-3.42v28.22h4.98V3.81h9.77V19.73z"
      />
      <path
        className="st1"
        d="M197.63,32.13h-43.85v-5.86h43.85V32.13z M195.09,17.48h-28.61v1.46h28.61v5.86h-34.28
		c-1.24,0-2.23-0.37-2.98-1.12c-0.75-0.75-1.12-1.74-1.12-2.98v-9.08h28.61v-1.27h-28.61V4.5h38.38V17.48z M189.88,35.79
		c2.96,1.92,4.43,4.12,4.43,6.59c0,2.41-1.48,4.59-4.43,6.54s-7.58,2.93-13.88,2.93s-10.92-0.98-13.88-2.93s-4.43-4.13-4.43-6.54
		c0-2.47,1.46-4.67,4.38-6.59c2.92-1.92,7.57-2.88,13.93-2.88C182.3,32.91,186.92,33.88,189.88,35.79z M169.82,39.9
		c-1.58,0.75-2.36,1.58-2.36,2.49c0,0.91,0.79,1.74,2.36,2.49c1.57,0.75,3.63,1.12,6.18,1.12c2.55,0,4.61-0.37,6.18-1.12
		c1.58-0.75,2.36-1.58,2.36-2.49c0-0.91-0.79-1.74-2.36-2.49c-1.57-0.75-3.64-1.12-6.18-1.12C173.45,38.77,171.39,39.15,169.82,39.9
		z"
      />
    </g>
  </svg>
);

function App() {
  let apiList = useSelector((a) => a.apiData);
  let linkList = useSelector((a) => a.linkData);
  let linkItem1 = linkList.filter((a) => a.cate === '1');
  let linkItem2 = linkList.filter((a) => a.cate === '2');
  let linkItem3 = linkList.filter((a) => a.cate === '3');
  let linkItem4 = linkList.filter((a) => a.cate === '4');
  let linkItem5 = linkList.filter((a) => a.cate === '5');

  let [isActive, setIsActive] = useState(false);
  const [matchedItems, setMatchedItems] = useState([]);

  //apiList.rnum 은 1부터 63번까지 string으로 출력됩니다.
  //linkList.linkId 는 r1부터 r63번까지  string으로 출력됩니다.
  //버튼을 클릭하면 apiList 데이터를 기준으로
  //apiList.rnum 과 linkList.linkId의 데이터 중 'r'뒤의 문자를 비교해서 같은 값이 있으면 새로운 배열로 만든다.
  const handleClick = (item) => {
    let newMatchedItems = apiList.filter((apiItem) => {
      return item.some((linkItem) => {
        let linkIdNumber = linkItem.linkId.replace('r', '');
        return apiItem.rnum === linkIdNumber;
      });
    });

    setMatchedItems(newMatchedItems); //새로운 배열을 matchedItems에 넣는다.
    setIsActive(true); //모달창을 활성화한다.
  };

  let closeModal = () => {
    setIsActive(false);
  };

  return (
    <div className="mw">
      <header className="hd">
        <h1>{logo}</h1>
        <nav className="gnb">
          <Link
            onClick={(e) => {
              e.preventDefault();
              handleClick(linkItem1);
            }}
          >
            북서부
          </Link>
          <Link
            onClick={(e) => {
              e.preventDefault();
              handleClick(linkItem2);
            }}
          >
            북동부
          </Link>
          <Link
            onClick={(e) => {
              e.preventDefault();
              handleClick(linkItem3);
            }}
          >
            남서부
          </Link>
          <Link
            onClick={(e) => {
              e.preventDefault();
              handleClick(linkItem4);
            }}
          >
            남동부
          </Link>
          <Link
            onClick={(e) => {
              e.preventDefault();
              handleClick(linkItem5);
            }}
          >
            중부
          </Link>
        </nav>
      </header>
      <main>
        <div className="arrow ar1" onClick={() => {
          handleClick(linkItem1);
        }}>
          {arrow}
        </div>
        <div className="arrow ar2" onClick={() => {
          handleClick(linkItem2);
        }}>
          {arrow}
        </div>
        <div className="arrow ar3" onClick={() => {
          handleClick(linkItem3);
        }}>
          {arrow}
        </div>
        <div className="arrow ar4" onClick={() => {
          handleClick(linkItem4);
        }}>
          {arrow}
        </div>
        <div className="arrow ar5" onClick={() => {
          handleClick(linkItem5);
        }}>
          {arrow}
        </div>
      </main>
      {isActive && (
        <Modal matchedItems={matchedItems} closeModal={closeModal} />
      )}
      <Footer className="footer" />
    </div>
  );
}

export default App;
